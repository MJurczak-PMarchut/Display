/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef REPETITIONSVIEWBASE_HPP
#define REPETITIONSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/repetitions_screen/RepetitionsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/RepeatButton.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>

class RepetitionsViewBase : public touchgfx::View<RepetitionsPresenter>
{
public:
    RepetitionsViewBase();
    virtual ~RepetitionsViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void RepetitionCountUp()
    {
        // Override and implement this function in Repetitions
    }

    virtual void RepetitionCountDown()
    {
        // Override and implement this function in Repetitions
    }

    virtual void ConfirmChange()
    {
        // Override and implement this function in Repetitions
    }

    virtual void CancelChange()
    {
        // Override and implement this function in Repetitions
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithOneWildcard RepetitionCount_text;
    touchgfx::RepeatButton UpButton;
    touchgfx::RepeatButton DownButton;
    touchgfx::Image image2;
    touchgfx::Image image3;
    touchgfx::ButtonWithIcon ConfirmSettings;
    touchgfx::ButtonWithIcon CancelSettings;

    /*
     * Wildcard Buffers
     */
    static const uint16_t REPETITIONCOUNT_TEXT_SIZE = 11;
    touchgfx::Unicode::UnicodeChar RepetitionCount_textBuffer[REPETITIONCOUNT_TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RepetitionsViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // REPETITIONSVIEWBASE_HPP
