/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/interval_screen/IntervalViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

IntervalViewBase::IntervalViewBase() :
    buttonCallback(this, &IntervalViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image3.setXY(-17, -16);
    image3.setBitmap(touchgfx::Bitmap(BITMAP_ABSTRACT_HUD_UI_GUI_FUTURE_FUTURISTIC_SCREEN_SYSTEM_VIRTUAL_BACKGROUND_115579_779_ID));

    digitalClock1.setPosition(47, 114, 217, 51);
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(201, 201, 255));
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AC53));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock1.setTime24Hour(0, 0, 0);

    AddSeconds.setXY(181, 62);
    AddSeconds.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
    AddSeconds.setDelay(12);
    AddSeconds.setInterval(60);

    SubSeconds.setXY(181, 165);
    SubSeconds.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
    SubSeconds.setDelay(12);
    SubSeconds.setInterval(60);

    image2.setXY(188, 68);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_48_ID));

    image2_1.setXY(188, 172);
    image2_1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SUB_NEW_48_ID));

    SubMinutes.setXY(112, 165);
    SubMinutes.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
    SubMinutes.setDelay(12);
    SubMinutes.setInterval(60);

    image2_1_1.setXY(119, 172);
    image2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SUB_NEW_48_ID));

    SubHours.setXY(43, 165);
    SubHours.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
    SubHours.setDelay(12);
    SubHours.setInterval(60);

    image2_1_1_1.setXY(50, 172);
    image2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_SUB_NEW_48_ID));

    AddMinutes.setXY(112, 61);
    AddMinutes.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
    AddMinutes.setDelay(12);
    AddMinutes.setInterval(60);

    image2_2.setXY(119, 67);
    image2_2.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_48_ID));

    AddHours.setXY(43, 62);
    AddHours.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
    AddHours.setDelay(12);
    AddHours.setInterval(60);

    image2_3.setXY(50, 68);
    image2_3.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_48_ID));

    ConfirmInterval.setXY(365, 69);
    ConfirmInterval.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DONE_48_ID));
    ConfirmInterval.setIconXY(7, 6);
    ConfirmInterval.setAction(buttonCallback);

    CancelInterval.setXY(365, 143);
    CancelInterval.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_48_ID));
    CancelInterval.setIconXY(7, 6);
    CancelInterval.setAction(buttonCallback);

    textArea1.setXY(157, 18);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GENI));

    add(__background);
    add(image3);
    add(digitalClock1);
    add(AddSeconds);
    add(SubSeconds);
    add(image2);
    add(image2_1);
    add(SubMinutes);
    add(image2_1_1);
    add(SubHours);
    add(image2_1_1_1);
    add(AddMinutes);
    add(image2_2);
    add(AddHours);
    add(image2_3);
    add(ConfirmInterval);
    add(CancelInterval);
    add(textArea1);
}

void IntervalViewBase::setupScreen()
{

}

void IntervalViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ConfirmInterval)
    {
        //ConfirmInterval
        //When ConfirmInterval clicked call virtual function
        //Call ConfirmIntervalChange
        ConfirmIntervalChange();

        //ReturnToMainScreen
        //When ConfirmInterval completed change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenCoverTransitionEast();
    }
    else if (&src == &CancelInterval)
    {
        //CancelInterval
        //When CancelInterval clicked call virtual function
        //Call CancelIntervalChange
        CancelIntervalChange();

        //ReturnToMainScreen2
        //When CancelInterval completed change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenCoverTransitionEast();
    }
}
